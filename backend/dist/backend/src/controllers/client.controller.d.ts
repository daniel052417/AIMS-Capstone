import { Response } from 'express';
import { AuthenticatedRequest } from '../middleware/auth';
export declare const getProducts: (req: Request, res: Response) => Promise<void>;
export declare const getProductById: (req: Request, res: Response) => Promise<void>;
export declare const getCategories: (req: Request, res: Response) => Promise<void>;
export declare const getPromotions: (req: Request, res: Response) => Promise<void>;
export declare const getPromotionById: (req: Request, res: Response) => Promise<void>;
export declare const registerCustomer: (req: Request, res: Response) => Promise<void>;
export declare const loginCustomer: (req: Request, res: Response) => Promise<void>;
export declare const refreshToken: (req: Request, res: Response) => Promise<void>;
export declare const logoutCustomer: (req: Request, res: Response) => Promise<void>;
export declare const forgotPassword: (req: Request, res: Response) => Promise<void>;
export declare const resetPassword: (req: Request, res: Response) => Promise<void>;
export declare const changePassword: (req: Request, res: Response) => Promise<void>;
export declare const getProfile: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const updateProfile: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const deleteProfile: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getCart: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const addToCart: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const updateCartItem: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const removeFromCart: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const clearCart: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getOrders: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getOrderById: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const createOrder: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const cancelOrder: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getWishlist: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const addToWishlist: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const removeFromWishlist: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getReviews: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const createReview: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const updateReview: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const deleteReview: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getNotifications: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const markNotificationAsRead: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const markAllNotificationsAsRead: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getSupportTickets: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const createSupportTicket: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getSupportTicketById: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const updateSupportTicket: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getFAQ: (req: Request, res: Response) => Promise<void>;
export declare const contactUs: (req: Request, res: Response) => Promise<void>;
//# sourceMappingURL=client.controller.d.ts.map